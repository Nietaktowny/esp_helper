; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[env]
lib_ldf_mode = deep+
build_flags = 
    -Wall                                                   ;Turn on all optional warnings which are desirable for normal code.
    -Wno-unused-variable                                    ;Suppres warnings about unused variables.
[espressif]
esp_lib_deps =
	  ;CException = https://github.com/ThrowTheSwitch/CException/archive/refs/tags/v1.3.3.zip
esp_monitor_speed = 115200                                  ;Default esp32 monitor speed.
esp_monitor_filters =
  direct                                  ;Do-nothing: forward all data unchanged.
  esp32_exception_decoder                 ;Custom filter for Espressif 32 which decodes crash exception
  log2file                                ;Log data to a file “platformio-device-monitor-%date%.log” located in the current working directory
esp_build_flags =
    -Wextra                                                 ;Enables an additional set of flags not covered by -Wall.

[env:esp-wrover-kit]
build_type = release
platform = espressif32@6.4.0
board = esp-wrover-kit                           ;or esp-wrover-kit / esp32dev / esp32-c3-devkitc-02
framework = espidf
monitor_speed = ${espressif.esp_monitor_speed}
monitor_filters = ${espressif.esp_monitor_filters}
build_flags = 
    ${espressif.esp_build_flags}
    -O3
    -DESP_WROVER_KIT
lib_deps = ${espressif.esp_lib_deps}
test_ignore = desktop/*
board_build.embed_txtfiles =
  src/web/index.html
  src/web/styles.css
  src/web/code.js
extra_scripts = 
  scripts/run_flawfinder.py
check_tool = cppcheck
check_flags =
  cppcheck: --enable=all
;flawfinder_arguments = 

[env:esp-dev]
build_type = release
platform = espressif32@6.4.0
board = esp32dev                           ;or esp-wrover-kit / esp32dev / esp32-c3-devkitc-02
framework = espidf
monitor_speed = ${espressif.esp_monitor_speed}
monitor_filters = ${espressif.esp_monitor_filters}
build_flags = 
    ${espressif.esp_build_flags}
    -O3
    -DESP_DEV_MODULE
lib_deps = ${espressif.esp_lib_deps}
test_ignore = desktop/*
board_build.embed_txtfiles =
  src/web/index.html
  src/web/styles.css
  src/web/code.js
extra_scripts = 
  scripts/run_flawfinder.py
check_tool = cppcheck
check_flags =
  cppcheck: --enable=all
;flawfinder_arguments = 

[env:esp32-c3]
build_type = release
platform = espressif32@6.4.0
board = esp32-c3-devkitc-02                           ;or esp-wrover-kit / esp32dev / esp32-c3-devkitc-02
framework = espidf
monitor_speed = ${espressif.esp_monitor_speed}
monitor_filters = ${espressif.esp_monitor_filters}
build_flags = 
    ${espressif.esp_build_flags}
    -Os
    -DESP32_C3_SUPERMINI
    -ffunction-sections
    -fdata-sections
lib_deps = ${espressif.esp_lib_deps}
test_ignore = desktop/*
board_build.partitions = esp32-c3.csv
board_build.embed_txtfiles =
  src/web/index.html
  src/web/styles.css
  src/web/code.js
extra_scripts = 
  scripts/run_flawfinder.py
check_tool = cppcheck
check_flags =
  cppcheck: --enable=all
;flawfinder_arguments = 
